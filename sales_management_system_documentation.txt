The Sales Management System is a software project designed to streamline and automate various aspects of sales operations. Its primary objective is to provide an organized platform for managing customer information, order processing, inventory control, and shipment tracking
Item Class: The Item class models an individual inventory item. It stores properties such as ID, name, and price. Its constructor initializes these values, and accessors (getId(), getName(), getPrice()) provide information about the item.
Stock Class: The Stock class serves as an inventory manager, utilizing a std::map named stock to efficiently track item quantities by their unique IDs. Essential methods include “add_Item”, which adds specified quantities to the stock, “sell_Item”, responsible for selling items and updating the stock if available, and “display_Stock”, which showcases the current inventory details.
Customer Class: Representing a customer, the Customer class contains private attributes for customer ID, name, and address. Its constructor sets these values, and accessors (get_Id(), get_Name(), get_Address()) offer access to customer information.
Order Class: The Order class stores details about a customer's order, including order ID, associated customer, items in the order, and shipment status. Functionality is provided through methods like addItem (for adding items to an order), calculate_Total (determining the total cost of the order), ship_Order and deliver_Order (updating shipment status), and display_Order_Details (presenting comprehensive order information).
Main Function: The main function serves as an example use case for these classes. It demonstrates creating instances of Item, Stock, Customer, and Order, simulating the process of adding items to stock, creating orders, fulfilling orders, and displaying relevant details.
Key Logic Points:
* A modular approach is adopted, designating separate classes for items, customers, orders, and stock to enhance code organization.
* The utilization of std::map in the Stock class optimizes item quantity lookup based on their IDs.
* The Order class acts as a comprehensive manager for order-specific details, including shipment status.
This design promotes clarity, maintainability, and ease of extension, with each class assigned specific responsibilities. The main function showcases their role in managing orders and stock.